{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/scripts/table.js","webpack:///./src/scripts/ball.js","webpack:///./src/scripts/game.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","PoolTable","dimensions","this","ctx","fillStyle","fillRect","width","height","topLeft","margin","bottomRight","outerBorder","widthHeight","rect","grad","createRadialGradient","addColorStop","fill","lineWidth","strokeStyle","strokeRect","innerBorders","forEach","innerBorder","beginPath","moveTo","lineTo","closePath","bigPockets","center","arc","Math","PI","smallPockets","smallRadius","pocketCenters","concat","drawBackground","BALL_CONSTANTS","PoolBall","position","velocity","number","color","marking","vx","x","vy","y","colliding","that","stroke","sqrt","font","textAlign","fillText","v","aNorm","abs","drawBall","POOL_BALLS","EightBallPool","canvas","getContext","innerTopLeft","innerBottomRight","innerWidthHeight","pocketedBalls","striped","solid","currentPocketed","playerOne","id","playerTwo","currentPlayer","gameStatus","newGame","scratched","handleMouseMove","handleClick","table","animate","poolBalls","poolBall","move","checkCollisions","checkPocketsAndBoundary","every","running","takeTurn","checkContinueGame","drawGameStatus","requestAnimationFrame","eightBall","cueBall","hitCount","push","y0","length","e","cRect","getBoundingClientRect","clientX","left","clientY","top","removeEventListener","play","addEventListener","idx","j","intersect","updateSpeed","isNearPocket","isPocketed","side","dir","slope","intercept","filter","right","bottom","midLeft","midRight","some","ballOne","ballTwo","vColl","vNColl","dotProd","x0","positions","Array","keys","initVelocity","solidBalls","slice","stripedBalls","randSolid","floor","random","randStriped","splice","tempBalls","pos","randBall","rackPoolBalls","document","getElementById","game","restart","modal","preventDefault","classList","add","remove","window","target","contains"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","export const outerBorder = 32;\nexport const innerBorder = 16;\nexport const margin = 150;\nexport const bigRadius = 15;\nexport const smallRadius = 14;\n\n\nexport class PoolTable {\n    constructor(dimensions) {\n        this.dimensions = dimensions;\n    }\n\n    drawBackground(ctx) {\n        ctx.fillStyle = \"rgb(235, 220, 235)\";\n        ctx.fillRect(0, 0, this.dimensions.width, this.dimensions.height);\n\n        // takes into account the 150 outer border & half of the table border at 16\n        // table is 655 x 375\n        const topLeft = [margin + outerBorder / 2, margin + outerBorder / 2];\n        const bottomRight = [this.dimensions.width - margin - outerBorder/2, this.dimensions.height - margin - outerBorder/2];\n        const widthHeight = [this.dimensions.width - margin * 2 - outerBorder, this.dimensions.height - margin * 2 - outerBorder];\n        ctx.rect(...topLeft, ...widthHeight);\n\n        // table and outer border\n        const grad = ctx.createRadialGradient(this.dimensions.width / 2, this.dimensions.height / 2, 5, this.dimensions.width / 2, this.dimensions.height / 2, 300);\n        grad.addColorStop(0, \"lightgreen\");\n        grad.addColorStop(1, \"green\");\n        ctx.fillStyle = grad;\n        ctx.fill();\n        ctx.lineWidth = outerBorder; // borders are drawn at the outline of the fill area 48 - 32 brown, 16 green trapezoids\n        ctx.strokeStyle = \"rgb(203, 113, 33)\";\n        ctx.strokeRect(...topLeft, ...widthHeight);\n\n        // inner borders\n        if (!this.innerBorders) this.innerBorders = [\n            [[margin + outerBorder, margin + outerBorder + 1.4 * bigRadius], \n                [margin + outerBorder, this.dimensions.height - margin - outerBorder - 1.4 * bigRadius],\n                [margin + outerBorder + innerBorder, this.dimensions.height - margin - outerBorder - innerBorder - 1.4 * bigRadius],\n                [margin + outerBorder + innerBorder, margin + outerBorder + 1.4 * bigRadius + innerBorder]],\n            [[this.dimensions.width - margin - outerBorder, margin + outerBorder + 1.4 * bigRadius],\n                [this.dimensions.width - margin - outerBorder, this.dimensions.height - margin - outerBorder - 1.4 * bigRadius],\n                [this.dimensions.width - margin - outerBorder - innerBorder, this.dimensions.height - margin - outerBorder - innerBorder - 1.4 * bigRadius],\n                [this.dimensions.width - margin - outerBorder - innerBorder, margin + outerBorder + 1.4 * bigRadius + innerBorder]],\n            [[margin + outerBorder + 1.4 * bigRadius, margin + outerBorder],\n                [0.5 * this.dimensions.width - smallRadius, margin + outerBorder],\n                [0.5 * this.dimensions.width - smallRadius - innerBorder, margin + outerBorder + innerBorder],\n                [margin + outerBorder + 1.4 * bigRadius + innerBorder, margin + outerBorder + innerBorder]],\n            [[this.dimensions.width - margin - outerBorder - 1.4 * bigRadius, margin + outerBorder],\n                [0.5 * this.dimensions.width + smallRadius, margin + outerBorder],\n                [0.5 * this.dimensions.width + smallRadius + innerBorder, margin + outerBorder + innerBorder],\n                [this.dimensions.width - margin - outerBorder - 1.4 * bigRadius - innerBorder, margin + outerBorder + innerBorder]],\n            [[margin + outerBorder + 1.4 * bigRadius, this.dimensions.height - margin - outerBorder],\n                [0.5 * this.dimensions.width - smallRadius, this.dimensions.height - margin - outerBorder],\n                [0.5 * this.dimensions.width - smallRadius - innerBorder, this.dimensions.height - margin - outerBorder - innerBorder],\n                [margin + outerBorder + 1.4 * bigRadius + innerBorder, this.dimensions.height - margin - outerBorder - innerBorder]],\n            [[this.dimensions.width - margin - outerBorder - 1.4 * bigRadius, this.dimensions.height - margin - outerBorder],\n                [0.5 * this.dimensions.width + smallRadius, this.dimensions.height - margin - outerBorder],\n                [0.5 * this.dimensions.width + smallRadius + innerBorder, this.dimensions.height - margin - outerBorder - innerBorder],\n                [this.dimensions.width - margin - outerBorder - 1.4 * bigRadius - innerBorder, this.dimensions.height - margin - outerBorder - innerBorder]],\n        ];\n\n        this.innerBorders.forEach(innerBorder => {\n            ctx.beginPath();\n            ctx.moveTo(...innerBorder[0]);            \n            ctx.lineTo(...innerBorder[1]);            \n            ctx.lineTo(...innerBorder[2]);            \n            ctx.lineTo(...innerBorder[3]);            \n            ctx.closePath();\n            ctx.fillStyle = \"yellowgreen\";\n            ctx.fill();\n        });\n\n        // pockets\n        const bigPockets = [\n            [topLeft[0] + outerBorder * 0.75, topLeft[1] + outerBorder * 0.75, bigRadius],\n            [topLeft[0] + outerBorder * 0.75, bottomRight[1] - outerBorder * 0.75, bigRadius],\n            [bottomRight[0] - outerBorder * 0.75, topLeft[1] + outerBorder * 0.75, bigRadius],\n            [bottomRight[0] - outerBorder * 0.75, bottomRight[1] - outerBorder * 0.75, bigRadius]\n        ];\n\n        \n        ctx.fillStyle = \"black\";\n        bigPockets.forEach(center => {\n            ctx.beginPath();\n            ctx.arc(...center, 0, 2 * Math.PI);\n            ctx.fill();\n        });\n\n        const smallPockets = [\n            [(topLeft[0] + bottomRight[0]) / 2, topLeft[1] + outerBorder * 0.65 - smallRadius * 0.3, smallRadius],\n            [(topLeft[0] + bottomRight[0]) / 2, bottomRight[1] - outerBorder * 0.65 + smallRadius * 0.3, smallRadius],\n        ];\n\n        smallPockets.forEach(center => {\n            ctx.beginPath();\n            ctx.arc(...center, 0, 2 * Math.PI);\n            ctx.fill();\n        });\n\n        if (!this.pocketCenters) this.pocketCenters = bigPockets.concat(smallPockets);\n    }\n\n    animate(ctx) {\n        this.drawBackground(ctx);\n    }\n}","export const BALL_CONSTANTS = {\n    RADIUS: 8.5,\n    BORDER_COLOR: \"gray\",\n    FRICTION: 0.000005\n};\n\nexport class PoolBall {\n    constructor(position, velocity, number, color, marking) {\n        this.vx = velocity.x; \n        this.vy = velocity.y;\n\n        this.x = position.x;\n        this.y = position.y;\n\n        this.number = number;\n        this.color = color;\n        this.marking = marking;\n\n        this.colliding = false;\n    }\n\n    // checks if 'this' ball intersects 'that' ball given positions\n    intersect(that) {\n        const sqDist = (this.x - that.x) * (this.x - that.x) + (this.y - that.y) * (this.y - that.y);\n        return sqDist <= 4 * (BALL_CONSTANTS.RADIUS) * (BALL_CONSTANTS.RADIUS);\n    }\n\n    drawBall(ctx) {\n        if (this.marking === \"solid\" || !this.marking) {\n            ctx.fillStyle = this.color;\n            ctx.beginPath();\n            ctx.arc(this.x, this.y, BALL_CONSTANTS.RADIUS, 0, 2 * Math.PI);\n            ctx.fill();\n            ctx.lineWidth = 0.5;\n            ctx.strokeStyle = BALL_CONSTANTS.BORDER_COLOR;\n            ctx.stroke();\n        } else if (this.marking === \"striped\") {\n            ctx.fillStyle = \"white\";\n            ctx.beginPath();\n            ctx.arc(this.x, this.y, BALL_CONSTANTS.RADIUS, 0, 2 * Math.PI);\n            ctx.fill();\n            ctx.lineWidth = 0.5;\n            ctx.strokeStyle = BALL_CONSTANTS.BORDER_COLOR;\n            ctx.stroke();\n\n            ctx.fillStyle = this.color;\n            ctx.beginPath();\n            ctx.arc(this.x, this.y, BALL_CONSTANTS.RADIUS, - Math.PI / 6, Math.PI / 6);\n            ctx.lineTo(this.x - BALL_CONSTANTS.RADIUS * Math.sqrt(3) / 2, this.y - BALL_CONSTANTS.RADIUS / 2);\n            ctx.closePath();\n            ctx.fill();\n            ctx.beginPath();\n            ctx.arc(this.x, this.y, BALL_CONSTANTS.RADIUS, Math.PI - Math.PI / 6, Math.PI + Math.PI / 6);\n            ctx.lineTo(this.x + BALL_CONSTANTS.RADIUS * Math.sqrt(3) / 2, this.y + BALL_CONSTANTS.RADIUS / 2);\n            ctx.closePath();\n            ctx.fill();\n        }\n\n        if (this.number) {\n            ctx.fillStyle = \"white\";\n            ctx.beginPath();\n            ctx.arc(this.x, this.y, BALL_CONSTANTS.RADIUS * .6, 0, 2 * Math.PI);\n            ctx.fill();\n\n            ctx.font = \"bold 8px sans-serif\";\n            ctx.textAlign = \"center\";\n            ctx.fillStyle = \"black\";\n            ctx.fillText(this.number, this.x, this.y + 2.5);\n        }\n\n        // // test code\n        // if (this.colliding) {\n        //     ctx.fillStyle = \"pink\";\n        //     ctx.beginPath();\n        //     ctx.arc(this.x, this.y, BALL_CONSTANTS.RADIUS, 0, 2 * Math.PI);\n        //     ctx.fill();\n        //     ctx.lineWidth = 0.5;\n        //     ctx.strokeStyle = BALL_CONSTANTS.BORDER_COLOR;\n        //     ctx.stroke();\n        // }        \n    }\n\n    move() {\n        this.x += this.vx;\n        this.y += this.vy;\n\n        // take into account friction from table\n        const v = Math.sqrt(this.vx * this.vx + this.vy * this.vy);\n        if (v > 0.001) {\n            const aNorm = {x: this.vx / v, y: this.vy / v};\n\n            if (Math.abs(this.vx) > Math.abs(aNorm.x * BALL_CONSTANTS.FRICTION)) { \n                this.vx -= aNorm.x * BALL_CONSTANTS.FRICTION;\n            } else {\n                this.vx = 0;\n            }\n            if (Math.abs(this.vy) > Math.abs(aNorm.y * BALL_CONSTANTS.FRICTION)) { \n                this.vy -= aNorm.y * BALL_CONSTANTS.FRICTION;\n            } else {\n                this.vy = 0;\n            }\n\n        }\n        else {\n            this.vx = 0;\n            this.vy = 0;\n        }\n    }\n\n    animate(ctx) {\n        // this.move();\n        this.drawBall(ctx);\n    }\n}","import { PoolTable, innerBorder, outerBorder, margin, bigRadius, smallRadius} from './table';\nimport { BALL_CONSTANTS, PoolBall } from './ball';\n\nconst POOL_BALLS = [\n    { number: null, color: \"white\", marking: null },\n    { number: 1, color: \"yellow\", marking: \"solid\" },\n    { number: 2, color: \"blue\", marking: \"solid\" },\n    { number: 3, color: \"red\", marking: \"solid\" },\n    { number: 4, color: \"purple\", marking: \"solid\" },\n    { number: 5, color: \"orange\", marking: \"solid\" },\n    { number: 6, color: \"green\", marking: \"solid\" },\n    { number: 7, color: \"brown\", marking: \"solid\" },\n    { number: 8, color: \"black\", marking: \"solid\" },\n    { number: 9, color: \"yellow\", marking: \"striped\" },\n    { number: 10, color: \"blue\", marking: \"striped\" },\n    { number: 11, color: \"red\", marking: \"striped\" },\n    { number: 12, color: \"purple\", marking: \"striped\" },\n    { number: 13, color: \"orange\", marking: \"striped\" },\n    { number: 14, color: \"green\", marking: \"striped\" },\n    { number: 15, color: \"brown\", marking: \"striped\" }\n];\n\nconst FRAMES = 50;\n\n// const energyLoss = 0.9;\n\nexport default class EightBallPool {\n    constructor(canvas) {\n        this.canvas = canvas;\n        this.ctx = canvas.getContext(\"2d\");\n        this.dimensions = { width: canvas.width, height: canvas.height };\n\n\n        this.innerTopLeft = [margin + outerBorder + innerBorder / 2, margin + outerBorder + innerBorder / 2];\n        this.innerBottomRight = [this.dimensions.width - margin - outerBorder - innerBorder / 2, this.dimensions.height - margin - outerBorder - innerBorder / 2];\n        this.innerWidthHeight = [this.dimensions.width - margin * 2 - outerBorder * 2 - innerBorder, this.dimensions.height - margin * 2 - outerBorder * 2 - innerBorder];\n\n        this.pocketedBalls = {striped: [], solid: []};\n        this.currentPocketed = [];\n\n        this.playerOne = { id: 1, marking: null };\n        this.playerTwo = { id: 2, marking: null };\n        this.currentPlayer = this.playerOne;\n\n        this.gameStatus = null;\n        this.newGame = true;\n\n        this.scratched = null;\n\n        this.handleMouseMove = this.handleMouseMove.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n    } \n\n    animate() {\n        this.table.animate(this.ctx);\n\n        for (let i = 0; i < FRAMES; i ++) {\n\n            this.poolBalls.forEach(poolBall => {\n                poolBall.move(this.ctx);\n            });\n            this.checkCollisions();\n            this.checkPocketsAndBoundary();\n        }\n\n\n        this.poolBalls.forEach(poolBall => {\n            poolBall.animate(this.ctx);\n        });\n\n        // console.log(this.poolBalls.map(poolBall => [poolBall.number, poolBall.vx, poolBall.vy]));\n\n        if (this.poolBalls.every(poolBall => poolBall.vx === 0 && poolBall.vy === 0)) {\n            this.running = false;\n            if (this.newGame) {\n                this.gameStatus = `New game! Player ${this.currentPlayer.id}'s Turn`;\n                this.newGame = false;\n                this.takeTurn();\n            }\n            else if(!this.newGame && this.checkContinueGame()) { this.takeTurn(); }\n        } else {\n            this.gameStatus = \"Pending...\";\n        }\n        \n        this.drawGameStatus();\n        if (this.running) requestAnimationFrame(this.animate.bind(this));\n\n    }\n\n    checkContinueGame() {\n        // player that just moved\n        let eightBall = false;\n        let cueBall = null;\n        let hitCount = 0;\n        this.currentPocketed.forEach(poolBall => {\n            if (poolBall.number === 8) {\n                eightBall = true; // if pocketed eightball\n            }\n            else if (poolBall.number) {\n                this.pocketedBalls[poolBall.marking].push(poolBall);\n                if (poolBall.marking === this.currentPlayer.marking) hitCount++;\n            } else {\n                cueBall = poolBall; // if pocketed cueBall\n                const y0 = this.innerTopLeft[1] + 0.50 * this.innerWidthHeight[1];\n\n                const position = { x: this.innerTopLeft[0] + 0.25 * this.innerWidthHeight[0], y: y0 };\n                cueBall.x = position.x;\n                cueBall.y = position.y;\n                cueBall.vx = 0;\n                cueBall.vy = 0;\n            }\n        });\n\n        if (eightBall && this.currentPlayer.marking) {\n            if (this.pocketedBalls[this.currentPlayer.marking].length === 7 && !cueBall) {\n                this.gameStatus = `Eight ball was pocketed. Player ${this.currentPlayer.id} won!`;\n            }\n            else {\n                this.gameStatus = `Eight ball was pocketed. Player ${this.currentPlayer.id} lost!`;\n            }\n            return false;\n        } else if (eightBall) {\n            this.gameStatus = `Eight ball was pocketed. Player ${this.currentPlayer.id} lost!`;\n            return false;\n        } else if (cueBall) {\n            this.poolBalls = [cueBall].concat(this.poolBalls); // always have cueBall first\n            this.currentPlayer = this.currentPlayer.id === 1 ? this.playerTwo : this.playerOne;\n            this.gameStatus = `Scratch. Player ${this.currentPlayer.id}'s Turn`;\n        } else if (this.currentPocketed.length === 0 || this.scratched) {\n            if (this.scratched) this.scratched = null;\n            this.currentPlayer = this.currentPlayer.id === 1 ? this.playerTwo : this.playerOne;\n            this.gameStatus = `Scratch. Player ${this.currentPlayer.id}'s Turn`;\n        } else if (!this.currentPlayer.marking) {\n            this.currentPlayer.marking = this.currentPocketed[0].marking;\n            const otherPlayer = this.currentPlayer.id === 1 ? this.playerTwo : this.playerOne;\n            otherPlayer.marking = this.currentPlayer.marking === \"striped\" ? \"solid\" : \"striped\";\n            this.gameStatus = `Player ${this.currentPlayer.id}'s Turn`;\n        } else if (hitCount) {\n            this.gameStatus = `Player ${this.currentPlayer.id}'s Turn`;\n        } else {\n            this.currentPlayer = this.currentPlayer.id === 1 ? this.playerTwo : this.playerOne;\n            this.gameStatus = `Scratch. Player ${this.currentPlayer.id}'s Turn`;\n        }\n\n        this.currentPocketed = [];\n        return true;\n    };\n\n    handleClick(e) {\n        const cRect = this.canvas.getBoundingClientRect();\n        const x = e.clientX - cRect.left * (this.canvas.width / cRect.width);\n        const y = e.clientY - cRect.top * (this.canvas.height / cRect.height);\n\n        let vx = (this.poolBalls[0].x - x) / (2 * margin);\n        let vy = (this.poolBalls[0].y - y) / (2 * margin);\n        const v = Math.sqrt(vx * vx + vy * vy);\n        if (v > BALL_CONSTANTS.RADIUS / FRAMES) {\n            vx = vx / v * BALL_CONSTANTS.RADIUS / FRAMES * 0.8;\n            vy = vy / v * BALL_CONSTANTS.RADIUS / FRAMES * 0.8;\n        }\n        this.poolBalls[0].vx = vx;\n        this.poolBalls[0].vy = vy;\n\n        this.canvas.removeEventListener('click', this.handleClick);\n        this.canvas.removeEventListener('mousemove', this.handleMouseMove);\n\n        if (!this.running) this.play();\n    };\n\n    handleMouseMove(e) {\n        // debugger\n        this.table.animate(this.ctx);\n        this.poolBalls.forEach(poolBall => {\n            poolBall.animate(this.ctx);\n        });\n        this.drawGameStatus();\n\n        const cRect = this.canvas.getBoundingClientRect();\n        const x = e.clientX - cRect.left * (this.canvas.width / cRect.width);\n        const y = e.clientY - cRect.top * (this.canvas.height / cRect.height);\n        // debugger\n        this.ctx.beginPath();\n        this.ctx.moveTo(this.poolBalls[0].x, this.poolBalls[0].y);\n        this.ctx.lineTo(x, y);\n        this.ctx.closePath();\n        this.ctx.lineWidth = 7;\n        this.ctx.strokeStyle = \"maroon\";\n        this.ctx.stroke();\n        this.poolBalls[0].animate(this.ctx);\n\n        this.canvas.addEventListener('click', this.handleClick);\n    };\n\n\n    takeTurn() {\n        this.canvas.addEventListener('mousemove', this.handleMouseMove);\n    }\n\n    drawGameStatus() {\n        // draw game status\n\n        this.ctx.font = \"bold 36px sans-serif\";\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillStyle = \"rgb(64,64,64)\";\n        this.ctx.fillText(this.gameStatus, this.dimensions.width / 2, margin * 0.9);\n\n        const padding = 5;\n        const r = BALL_CONSTANTS.RADIUS;\n\n        this.ctx.font = \"18px sans-serif\";\n        this.ctx.textAlign = \"left\";\n        this.ctx.fillStyle = \"rgb(64,64,64)\";\n        this.ctx.fillText(`Player 1's Pocketed Balls${this.playerOne.marking ? ` (${this.playerOne.marking})` : \"\"}`, margin, this.dimensions.height - margin * 0.75);\n        this.ctx.fillStyle = \"thistle\";\n        this.ctx.fillRect(margin, this.dimensions.height - 0.7 * margin, (this.dimensions.width - 2 * margin) * 0.45, 0.25 * margin);\n        if (this.playerOne.marking) this.pocketedBalls[this.playerOne.marking].forEach((poolBall, idx) => {\n            poolBall.x = margin + (idx + 1) * padding + (idx * 2 + 1) * r;\n            poolBall.y = this.dimensions.height - 0.7 * margin + (0.25 * margin) / 2;\n            poolBall.vx = 0;\n            poolBall.vy = 0;\n            poolBall.drawBall(this.ctx);\n        });\n\n\n        this.ctx.font = \"18px sans-serif\";\n        this.ctx.textAlign = \"right\";\n        this.ctx.fillStyle = \"rgb(64,64,64)\";\n        this.ctx.fillText(`Player 2's Pocketed Balls${this.playerTwo.marking ? ` (${this.playerTwo.marking})` : \"\"}`, this.dimensions.width - margin, this.dimensions.height - margin * 0.75);\n        this.ctx.fillStyle = \"thistle\";\n        this.ctx.fillRect(this.dimensions.width - margin - (this.dimensions.width - 2 * margin) * 0.45, this.dimensions.height - 0.7 * margin, (this.dimensions.width - 2 * margin) * 0.45, 0.25 * margin);\n        if (this.playerTwo.marking) this.pocketedBalls[this.playerTwo.marking].forEach((poolBall, idx) => {\n            poolBall.x = this.dimensions.width - (margin + (idx + 1) * padding + (idx * 2 + 1) * r);\n            poolBall.y = this.dimensions.height - 0.7 * margin + (0.25 * margin) / 2;\n            poolBall.vx = 0;\n            poolBall.vy = 0;\n            poolBall.drawBall(this.ctx);\n        });\n    }\n\n    // check for collisions among pool balls\n    checkCollisions() {\n        this.poolBalls.forEach(poolBall => poolBall.colliding = false );\n        // goes through every unique pair of pool balls to check for collision\n        for (let i = 0; i < this.poolBalls.length; i++) {\n            for (let j = i + 1; j < this.poolBalls.length; j++) {\n                if (this.poolBalls[i].intersect(this.poolBalls[j])) {\n                    this.poolBalls[i].colliding = true;\n                    this.poolBalls[j].colliding = true;\n                    \n                    // check if scratched\n                    if (i === 0 && this.currentPlayer.marking && this.scratched === null) {\n                        if (this.poolBalls[j].marking != this.currentPlayer.marking) {\n                            this.scratched = true;\n                        } else if (this.poolBalls[j].number === \"8\" && this.pocketedBalls[this.currentPlayer.marking].length < 7) {\n                            this.scratched = true;\n                        }\n                        else {\n                            this.scratched = false;\n                        }\n                    }\n\n                    this.updateSpeed(this.poolBalls[i], this.poolBalls[j]);\n                }\n            } \n        }\n    }\n\n    // check for pocketing balls & collisions with pool table sides\n    checkPocketsAndBoundary() {\n        this.poolBalls.forEach((poolBall, idx) => {\n            const isNearPocket = this.isNearPocket(poolBall);\n            const r = BALL_CONSTANTS.RADIUS;\n\n            if (this.isPocketed(poolBall)) {\n                poolBall.vx = 0;\n                poolBall.vy = 0;\n                this.currentPocketed.push(poolBall);\n                this.poolBalls[idx] = null;\n            } else if (isNearPocket) {\n                isNearPocket.forEach(side => {\n                    switch(side.dir) {\n                        case \"bottomLeft\":\n                            // debugger\n                            if (Math.abs((poolBall.y + r / Math.sqrt(2)) + side.slope * (poolBall.x - r / Math.sqrt(2)) - side.intercept) < 5) {\n                                [poolBall.vx, poolBall.vy] = [poolBall.vy, poolBall.vx];\n                            }\n                            break;\n                        case \"bottomRight\":\n                            // debugger\n                            if (Math.abs((poolBall.y + r / Math.sqrt(2)) + side.slope * (poolBall.x + r / Math.sqrt(2)) - side.intercept) < 5) {\n                                [poolBall.vx, poolBall.vy] = [-poolBall.vy, -poolBall.vx];\n                            }\n                            break;\n                        case \"topLeft\":\n                            // debugger\n                            if (Math.abs((poolBall.y - r / Math.sqrt(2)) + side.slope * (poolBall.x - r / Math.sqrt(2)) - side.intercept) < 5) {\n                                [poolBall.vx, poolBall.vy] = [-poolBall.vy, -poolBall.vx];\n                            }\n                            break;\n                        case \"topRight\":\n                            // debugger\n                            if (Math.abs((poolBall.y - r / Math.sqrt(2)) + side.slope * (poolBall.x + r / Math.sqrt(2)) - side.intercept) < 5) {\n                                [poolBall.vx, poolBall.vy] = [poolBall.vy, poolBall.vx];\n                            }\n                            break;\n                        default: break;\n                    }\n                });\n            }\n            else {\n                // debugger\n                if (poolBall.x - BALL_CONSTANTS.RADIUS - 0.5<= this.innerTopLeft[0] + innerBorder / 2 || poolBall.x + BALL_CONSTANTS.RADIUS + 0.5 >= this.innerBottomRight[0] - innerBorder / 2) {\n                    poolBall.vx = -poolBall.vx;\n                    // poolBall.vy *= energyLoss;\n                }\n                if (poolBall.y - BALL_CONSTANTS.RADIUS - 0.5<= this.innerTopLeft[1] + innerBorder / 2 || poolBall.y + BALL_CONSTANTS.RADIUS + 0.5 >= this.innerBottomRight[1] - innerBorder / 2) {\n                    poolBall.vy = -poolBall.vy;\n                    // poolBall.vx *= energyLoss;\n                }\n            }\n        });\n        this.poolBalls = this.poolBalls.filter(poolBall => poolBall);\n    }\n\n    isNearPocket(poolBall) {\n        const left = this.innerTopLeft[0] + innerBorder / 2 + 1.4 * bigRadius;\n        const top = this.innerTopLeft[1] + innerBorder / 2 + 1.4 * bigRadius;\n        const right = this.innerBottomRight[0] - innerBorder / 2 - 1.4 * bigRadius;\n        const bottom = this.innerBottomRight[1] - innerBorder / 2 - 1.4 * bigRadius;\n        const midLeft = 0.5 * this.dimensions.width - smallRadius - innerBorder;\n        const midRight = 0.5 * this.dimensions.width + smallRadius + innerBorder;\n\n        // debugger\n        // returns the slopes & intercepts to check - (y + x - c): slope = +1 OR (y - x - c): slope = -1; dir is which side of circle hits line\n        if (poolBall.x < left && poolBall.y < top) return [{ slope: -1, intercept: 1.4 * bigRadius, dir: \"bottomLeft\"}, \n                                                            { slope: -1, intercept: -1.4 * bigRadius, dir: \"topRight\"}];\n        if (poolBall.x < left && poolBall.y > bottom) return [{ slope: 1, intercept: this.dimensions.height - 1.4 * bigRadius, dir: \"topLeft\" },\n                                                                { slope: 1, intercept: this.dimensions.height + 1.4 * bigRadius, dir: \"bottomRight\"}];\n        if (poolBall.x > right && poolBall.y < top) return [{ slope: 1, intercept: this.dimensions.width - 1.4 * bigRadius, dir: \"topLeft\"},\n                                                                { slope: 1, intercept: this.dimensions.width + 1.4 * bigRadius, dir: \"bottomRight\"}];\n        if (poolBall.x > right && poolBall.y > bottom) return [{ slope: -1, intercept: this.dimensions.height - this.dimensions.width - 1.4 * bigRadius, dir: \"topRight\"},\n                                                                { slope: -1, intercept: this.dimensions.height - this.dimensions.width + 1.4 * bigRadius, dir: \"bottomLeft\"}];\n        if (poolBall.y <= top + BALL_CONSTANTS.RADIUS && poolBall.x > midLeft && poolBall.x < midRight) return [{ slope: 1, intercept: 0.5 * this.dimensions.width - smallRadius + margin + outerBorder, dir: \"topLeft\"}, // START HERE ON THURSDAY\n                                                                                            { slope: -1, intercept: margin + outerBorder - (0.5 * this.dimensions.width + smallRadius), dir: \"topRight\"}];\n        if (poolBall.y >= bottom - BALL_CONSTANTS.RADIUS && poolBall.x > midLeft && poolBall.x < midRight) return [{ slope: -1, intercept: this.dimensions.height - margin - outerBorder - (0.5 * this.dimensions.width - smallRadius), dir: \"bottomLeft\"},\n                                                                                            { slope: 1, intercept: 0.5 * this.dimensions.width + smallRadius + this.dimensions.height - margin - outerBorder, dir: \"bottomRight\"}];\n\n        return null;\n    }\n\n    isPocketed(poolBall) {\n        return this.table.pocketCenters.some(center => {\n            if ((center[0] - poolBall.x) * (center[0] - poolBall.x) + \n                (center[1] - poolBall.y) * (center[1] - poolBall.y) <= \n                center[2] * center[2]) {\n                    return true;\n            } else {\n                return false;\n            }\n        });\n    }\n\n    updateSpeed(ballOne, ballTwo) {\n        const vColl = {x: ballTwo.x - ballOne.x, y: ballTwo.y - ballOne.y};\n        const d = Math.sqrt(vColl.x * vColl.x + vColl.y * vColl.y);\n        const vNColl = {x: vColl.x / d, y: vColl.y / d};\n        \n        const vRelVel = {x: ballOne.vx - ballTwo.vx, y: ballOne.vy - ballTwo.vy};\n        \n        const dotProd = vNColl.x * vRelVel.x + vNColl.y * vRelVel.y;\n        \n        if (dotProd < 0) return;\n        // console.log(ballOne.vy + ballTwo.vy);\n\n        ballOne.vx -= vNColl.x * dotProd;\n        ballOne.vy -= vNColl.y * dotProd;\n        ballTwo.vx += vNColl.x * dotProd;\n        ballTwo.vy += vNColl.y * dotProd;\n        // console.log(ballOne.vy + ballTwo.vy);\n        // console.log(\"--\");\n    }\n\n    rackPoolBalls() {\n        const x0 = this.innerTopLeft[0] + 0.75 * this.innerWidthHeight[0];\n        const y0 = this.innerTopLeft[1] + 0.50 * this.innerWidthHeight[1];\n\n        const positions = [{x: this.innerTopLeft[0] + 0.25 * this.innerWidthHeight[0], y: y0}];\n\n        [...Array(5).keys()].forEach(n => {\n            return [...Array(n + 1).keys()].forEach(m => {\n                const x = x0 + n * BALL_CONSTANTS.RADIUS * Math.sqrt(3);\n                const y = y0 - n * BALL_CONSTANTS.RADIUS + 2 * m * BALL_CONSTANTS.RADIUS;\n                positions.push({x, y});\n            });\n        });\n\n        const initVelocity = { x: 0, y: 0};\n        const poolBalls = [];\n        // initiate cue ball -- change initial x speed for testing\n        poolBalls[0] = new PoolBall(positions[0], {x: 0 / FRAMES, y: 0 / FRAMES}, POOL_BALLS[0].number, POOL_BALLS[0].color, POOL_BALLS[0].marking);\n        // initiate 8-ball\n        poolBalls[5] = new PoolBall(positions[5], initVelocity, POOL_BALLS[8].number, POOL_BALLS[8].color, POOL_BALLS[8].marking);\n\n\n        // initiate end corners - one striped and one solid\n        const solidBalls = POOL_BALLS.slice(1, 8);\n        const stripedBalls = POOL_BALLS.slice(9);\n        const randSolid = Math.floor(Math.random() * solidBalls.length);\n        const randStriped = Math.floor(Math.random() * stripedBalls.length);\n        poolBalls[11] = new PoolBall(positions[11], initVelocity, solidBalls[randSolid].number, solidBalls[randSolid].color, solidBalls[randSolid].marking);\n        poolBalls[15] = new PoolBall(positions[15], initVelocity, stripedBalls[randStriped].number, stripedBalls[randStriped].color, stripedBalls[randStriped].marking);\n        \n        solidBalls.splice(randSolid, 1);\n        stripedBalls.splice(randStriped, 1);\n        const tempBalls = solidBalls.concat(stripedBalls);\n\n        positions.forEach((pos, idx) => {\n            if (!poolBalls[idx]) {\n                const randBall = Math.floor(Math.random() * tempBalls.length);\n                const poolBall = new PoolBall(pos, initVelocity, tempBalls[randBall].number, tempBalls[randBall].color, tempBalls[randBall].marking);\n                poolBalls[idx] = poolBall;\n                tempBalls.splice(randBall, 1);\n            }\n        });\n\n        return poolBalls;\n    }\n\n    restart() {\n        // this.running = false;\n        this.running = false;\n        this.table = new PoolTable(this.dimensions);\n        this.poolBalls = this.rackPoolBalls();\n\n\n        this.pocketedBalls = { striped: [], solid: [] };\n        this.currentPocketed = [];\n\n        this.playerOne = { id: 1, marking: null };\n        this.playerTwo = { id: 2, marking: null };\n        this.currentPlayer = this.playerOne;\n\n        this.gameStatus = null;\n        this.newGame = true;\n\n        this.scratched = null;\n\n        this.animate();\n    }\n\n    play() {\n        this.running = true;\n        this.animate();\n    }\n\n    \n}","import './styles/index.scss';\nimport EightBallPool from './scripts/game';\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    const canvas = document.getElementById('pool-game');\n    const game = new EightBallPool(canvas);\n    game.restart();\n\n    const button = document.getElementById('restart-game');\n    button.addEventListener('click', e => {\n        game.restart();\n    });\n\n    const modal = document.getElementById('modal');\n    const trigger = document.getElementById('modal-trigger');\n    trigger.addEventListener('click', e=> {\n        e.preventDefault();\n        modal.classList.add('show');\n    })\n\n    const closeButton = document.getElementById('close-button');\n    closeButton.addEventListener('click', e => {\n        e.preventDefault();\n        modal.classList.remove('show');\n    });\n\n    window.addEventListener('click', e => {\n        if (e.target.classList.contains('show')) {\n            modal.classList.remove('show');\n        }\n    });\n});"],"sourceRoot":""}